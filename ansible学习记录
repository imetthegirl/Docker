安装ansible：
yum install ansible
配置ansible：
echo -n '[local]\n127.0.0.1' >> /etc/ansible/hosts #添加本地主机地址.
ansible -i /etc/ansible/hosts --connection=local local -m ping #使用ansible ping本地主机
ping本地主机显示为：
127.0.0.1 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    }, 
    "changed": false, 
    "ping": "pong"
}

ansible -i /etc/ansible/hosts --connection=local local -b --become-user=root -m shell -a 'ls /' #使用ansible执行shell命令查看本机根目录
-b - “成为”，在运行命令时告诉可以成为另一个用户。
--become-user=root - 以用户“root”运行以下命令（例如，使用命令使用“sudo”）。我们可以在此定义任何现有的用户。
-a 用于将任何参数传递给定义的模块 -m
效果显示为：
127.0.0.1 | CHANGED | rc=0 >>
.....

copy文件：
ansible --connection=local local -m copy -a "src=/opt/busybox.tar dest=/tmp/" #在本地复制文件，使用-m参数，将/opt/busybox.tar复制到/tmp目录下

ansible --connection=local local -b --become-user=root -m shell -a 'ls -l /tmp'
127.0.0.1 | CHANGED | rc=0 >>
总用量 1436
drwx------. 2 root root      41 7月   2 15:27 ansible_command_payload_gPbH4o
-rw-r--r--. 1 root root 1463808 7月   2 15:09 busybox.tar


输出内容为绿色，表示执行成功，仅查询但没有发生任何改变

输出内容为黄色，表示执行成功，但对受控主机产生了影响，发生了配置改变

输出内容为红色：表示执行失败!!!



command(重要模块)
执行命令模块，ansible命令执行默认模块

shell(重要模块)
执行shell脚本模块

script(重要模块)
把脚本发到客户端然后执行；执行脚本命令在远程服务器上

copy(重要模块)
把本地文件发送到远端

file
设定文件属性模块

service
系统服务管理模块

cron
计划任务管理模块

yum
yum软件包安装管理模块

synchronize
使用rsync同步文件模块

mount
挂载模块

ansible帮助信息系统中查看方法：ansible-doc -l        <-查看全部模块列表信息
ansible-doc -s [模块]   <-查看指定模块用法参数信息
