#!/bin/bash


#安装之前需要先在master上安装ansible
#/etc/ansible/hosts中添加以下内容
#[master]
#192.168.137.40
#[node]
#192.168.137.59
#安装前需要先修改主机名

ansible all -m shell -a 'systemctl stop firewalld'
ansible all -m shell -a 'systemctl disable firewalld' #关闭防火墙
ansible all -m shell -a "sed -i 's/enforcing/disabled/' /etc/selinux/config" #关闭selinux
ansible all -m shell -a "sed -i '$d' /etc/fstab"  #关闭swap分区
#ansible local -m shell -a 'hostnamectl set-hostname master'
#ansible node -m shell -a 'hostnamectl set-hostname node1' #修改主机名,还是先修改好一点，修改完主机名要重新登录



#将桥接的IPv4流量传递到iptables的链
cat >/etc/sysctl.d/k8s.conf << EOF
net.bridge.bridge-nf-call-ip6tables =1
net.bridge.bridge-nf-call-iptables =1
EOF

ansible node -m copy -a 'src=/etc/sysctl.d/k8s.conf dest=/etc/sysctl.d/k8s.conf'


ansible all -m shell -a 'sysctl --system'  # 生效



#配置时钟同步
#yum install ntpdate -y
#ntpdate time.windows.com

ansible all -m shell -a 'yum install ntpdate -y'
ansible all -m shell -a 'ntpdate time.windows.com'

#安装docker
#wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo
#yum -y install docker-ce
#systemctl enable docker && systemctl start docker

ansible all -m shell -a 'wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo'
ansible all -m shell -a 'yum -y install docker-ce'
ansible all -m shell -a 'systemctl enable docker && systemctl start docker'
#docker启动失败，journalctl -xe显示Read-only file system 执行 mount -o remount -rw / 然后重启docker

#配置镜像下载加速器：
cat >/etc/docker/daemon.json << EOF
{
"registry-mirrors":["https://b9pmyelo.mirror.aliyuncs.com"]
}
EOF

ansible node -m copy -a 'src=/etc/docker/daemon.json dest=/etc/docker/daemon'

#重启docker：
#systemctl restart docker
ansible all -m shell -a 'systemctl restart docker'

#配置k8s阿里源：

cat >/etc/yum.repos.d/kubernetes.repo << EOF
[kubernetes]
name=Kubernetes
baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF

ansible node -m copy -a 'src=/etc/yum.repos.d/kubernetes.repo dest=/etc/yum.repos.d/kubernetes.repo'


#安装kubeadm、kubelet和kubectl：
#yum install -y kubelet-1.18.0  kubeadm-1.18.0  kubectl-1.18.0
#systemctl enable kubelet
ansible all -m shell -a 'yum install -y kubelet-1.18.0  kubeadm-1.18.0  kubectl-1.18.0'

ansible all -m shell -a 'systemctl enable kubelet'


#master节点初始化
kubeadm init \
--apiserver-advertise-address=192.168.137.40 \
--image-repository registry.aliyuncs.com/google_containers \
--kubernetes-version v1.18.0 \
--service-cidr=10.96.0.0/12 \ 
--pod-network-cidr=10.244.0.0/16 \
--ignore-preflight-errors=all

#如遇到kubeadm初始化失败的错误
#[kubelet-check] Initial timeout of 40s passed.
#error execution phase upload-config/kubelet:
#Error writing Crisocket information for the control-plane node: timed out waiting for the condition
#执行下面的命令：
#swapoff -a && kubeadm reset && systemctl daemon-reload && systemctl restart kubelet && iptables -F && iptables -t nat -F && iptables -t mangle -F && iptables -X



mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubeadm token create --print-join-command #node节点加入master需要的参数，可以通过这个命令创建

ansible node -m shell -a 'kubeadm join 192.168.137.40:6443 --token yjgg0p.jtj53hnfgyk1z1bn --discovery-token-ca-cert-hash sha256:7286399c6d6caa5b0b633f5a05d7e346d2c621b1f1c8d1de0702693b1b8a167b'

kubectl apply -f  https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

#docker批量保存镜像命令docker save `docker images |awk '{print $1":"$2}' |grep -v TAG |xargs ` |gzip > /tmp/test.tar.gz

